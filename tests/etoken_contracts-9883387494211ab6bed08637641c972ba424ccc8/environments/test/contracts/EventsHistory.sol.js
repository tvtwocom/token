// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":false,"inputs":[{"name":"_stackDepthLib","type":"address"}],"name":"setupStackDepthLib","outputs":[{"name":"","type":"bool"}],"type":"function"},{"constant":false,"inputs":[{"name":"_eventSignature","type":"bytes4"},{"name":"_emitter","type":"address"}],"name":"addEmitter","outputs":[{"name":"","type":"bool"}],"type":"function"},{"constant":false,"inputs":[{"name":"_name","type":"bytes32"}],"name":"getAddress","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"versions","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"bytes32"}],"name":"index","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":false,"inputs":[{"name":"_caller","type":"address"},{"name":"_name","type":"string"},{"name":"_changelog","type":"string"}],"name":"addVersion","outputs":[{"name":"","type":"bool"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"versionInfo","outputs":[{"name":"block","type":"uint256"},{"name":"by","type":"address"},{"name":"caller","type":"address"},{"name":"name","type":"string"},{"name":"changelog","type":"string"}],"type":"function"},{"constant":true,"inputs":[],"name":"latestVersion","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"_name","type":"bytes32"},{"name":"_addr","type":"address"}],"name":"setAddress","outputs":[],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"bytes4"}],"name":"emitters","outputs":[{"name":"","type":"address"}],"type":"function"}],
    binary: "60606040526001805460a060020a60ff021916905561074d806100226000396000f3606060405236156100825760e060020a600035046312ab724281146100c457806313426d87146100fa57806321f8a72114610118578063488725a01461013b5780635250fec71461015357806362d020d91461017457806387114b8c14610214578063c07f47d414610253578063ca446dd91461025c578063e33dafbf14610287575b6102a860003411156102aa576102aa33345b61049f8282604051600090600160a060020a0384169083908381818185876185025a03f193505050505b92915050565b610331600435600154600090600160a060020a0316808214156104aa57505060018054600160a060020a031916821781556104ac565b610331600435602435600060003411156104b1576104b13334610094565b610345600435600081815260208190526040902054600160a060020a03166104ac565b61036260043560036020526000908152604090205481565b610345600435600060208190529081526040902054600160a060020a031681565b60408051602060248035600481810135601f81018590048502860185019096528585526103319581359591946044949293909201918190840183828082843750506040805160209735808a0135601f81018a90048a0283018a019093528282529698976064979196506024919091019450909250829150840183828082843750949650505050505050600060006000341115610537576105373334610094565b61037460043560046020819052600091825260409091208054600182015460028301549193600160a060020a0391821693929091169160038101910185565b61036260055481565b6102a860043560243560008281526020819052604090208054600160a060020a031916821790555050565b610345600435600260205260009081526040902054600160a060020a031681565b005b600160a060020a03331660009081526003602052604081205414156102cc575b565b600160e060020a03196000803591909116815260026020526040808220549051600160a060020a039190911691903690808383808284378201915050925050506020604051808303818560325a03f4156100025750506040515115156102ca57610002565b604080519115158252519081900360200190f35b60408051600160a060020a03929092168252519081900360200190f35b60408051918252519081900360200190f35b60408051868152600160a060020a03868116602083015285169181019190915260a06060820181815284546002600182161561010002600019019091160491830182905290608083019060c0840190869080156104125780601f106103e757610100808354040283529160200191610412565b820191906000526020600020905b8154815290600101906020018083116103f557829003601f168201915b5050838103825284546002600182161561010002600019019091160480825260209190910190859080156104875780601f1061045c57610100808354040283529160200191610487565b820191906000526020600020905b81548152906001019060200180831161046a57829003601f168201915b505097505050505050505060405180910390f35b5050565b151561049b57610002565b505b919050565b600160e060020a0319831660009081526002602052604081205460d960020a6430b236b4b70291600160a060020a0391909116146104f35760009150506100be565b5050600160e060020a0319821660009081526002602052604090208054600160a060020a0319168217905560016100be565b5060019550505050505b509392505050565b600160a060020a03851660009081526003602052604081205460d960020a6430b236b4b702911461056c57600092505061052f565b84516000141561058057600092505061052f565b83516000141561059457600092505061052f565b60058054600190810191829055600160a060020a0388166000908152600360208181526040808420869055805160a081018252438152338184019081528183018e8152606083018e8152608084018e9052898852600486529387208351815591518289018054600160a060020a0319908116909217905590516002838101805490931690911790915592518051958201805481895297869020999b5092989197929692831615610100026000190190921692909204601f90810184900483019493919091019083901061068a57805160ff19168380011785555b506106ba9291505b808211156107195760008155600101610676565b8280016001018555821561066e579182015b8281111561066e57825182600050559160200191906001019061069c565b50506080820151816004016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061071d57805160ff19168380011785555b50610525929150610676565b5090565b8280016001018555821561070d579182015b8281111561070d57825182600050559160200191906001019061072f56",
    unlinked_binary: "60606040526001805460a060020a60ff021916905561074d806100226000396000f3606060405236156100825760e060020a600035046312ab724281146100c457806313426d87146100fa57806321f8a72114610118578063488725a01461013b5780635250fec71461015357806362d020d91461017457806387114b8c14610214578063c07f47d414610253578063ca446dd91461025c578063e33dafbf14610287575b6102a860003411156102aa576102aa33345b61049f8282604051600090600160a060020a0384169083908381818185876185025a03f193505050505b92915050565b610331600435600154600090600160a060020a0316808214156104aa57505060018054600160a060020a031916821781556104ac565b610331600435602435600060003411156104b1576104b13334610094565b610345600435600081815260208190526040902054600160a060020a03166104ac565b61036260043560036020526000908152604090205481565b610345600435600060208190529081526040902054600160a060020a031681565b60408051602060248035600481810135601f81018590048502860185019096528585526103319581359591946044949293909201918190840183828082843750506040805160209735808a0135601f81018a90048a0283018a019093528282529698976064979196506024919091019450909250829150840183828082843750949650505050505050600060006000341115610537576105373334610094565b61037460043560046020819052600091825260409091208054600182015460028301549193600160a060020a0391821693929091169160038101910185565b61036260055481565b6102a860043560243560008281526020819052604090208054600160a060020a031916821790555050565b610345600435600260205260009081526040902054600160a060020a031681565b005b600160a060020a03331660009081526003602052604081205414156102cc575b565b600160e060020a03196000803591909116815260026020526040808220549051600160a060020a039190911691903690808383808284378201915050925050506020604051808303818560325a03f4156100025750506040515115156102ca57610002565b604080519115158252519081900360200190f35b60408051600160a060020a03929092168252519081900360200190f35b60408051918252519081900360200190f35b60408051868152600160a060020a03868116602083015285169181019190915260a06060820181815284546002600182161561010002600019019091160491830182905290608083019060c0840190869080156104125780601f106103e757610100808354040283529160200191610412565b820191906000526020600020905b8154815290600101906020018083116103f557829003601f168201915b5050838103825284546002600182161561010002600019019091160480825260209190910190859080156104875780601f1061045c57610100808354040283529160200191610487565b820191906000526020600020905b81548152906001019060200180831161046a57829003601f168201915b505097505050505050505060405180910390f35b5050565b151561049b57610002565b505b919050565b600160e060020a0319831660009081526002602052604081205460d960020a6430b236b4b70291600160a060020a0391909116146104f35760009150506100be565b5050600160e060020a0319821660009081526002602052604090208054600160a060020a0319168217905560016100be565b5060019550505050505b509392505050565b600160a060020a03851660009081526003602052604081205460d960020a6430b236b4b702911461056c57600092505061052f565b84516000141561058057600092505061052f565b83516000141561059457600092505061052f565b60058054600190810191829055600160a060020a0388166000908152600360208181526040808420869055805160a081018252438152338184019081528183018e8152606083018e8152608084018e9052898852600486529387208351815591518289018054600160a060020a0319908116909217905590516002838101805490931690911790915592518051958201805481895297869020999b5092989197929692831615610100026000190190921692909204601f90810184900483019493919091019083901061068a57805160ff19168380011785555b506106ba9291505b808211156107195760008155600101610676565b8280016001018555821561066e579182015b8281111561066e57825182600050559160200191906001019061069c565b50506080820151816004016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061071d57805160ff19168380011785555b50610525929150610676565b5090565b8280016001018555821561070d579182015b8281111561070d57825182600050559160200191906001019061072f56",
    address: "0x064b7c9ffafe857578be8a6e7bfa12b4d63da698",
    generated_with: "2.0.9",
    contract_name: "EventsHistory"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("EventsHistory error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("EventsHistory error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("EventsHistory error: Please call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("EventsHistory error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.EventsHistory = Contract;
  }

})();
